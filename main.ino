/* Si on remplace les capteurs de luminosités par de bêtes boutons et qu'on a pas les boutons de réponse */
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SH110X.h>
#define nombreBoutons 4
#define nombrePrise 4

#define i2c_Address 0x3c

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET -1
Adafruit_SH1106G display = Adafruit_SH1106G(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

#define NUMFLAKES 10
#define XPOS 0
#define YPOS 1
#define DELTAY 2

#define LOGO16_GLCD_HEIGHT 16
#define LOGO16_GLCD_WIDTH 16

int HTZ = 1;
int posAX = 0;
static const unsigned char PROGMEM logo_GB[] = { // 'gameboy logo', 128x64px
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x03, 0xfe, 0x0f, 0x80, 0x78, 0x0f, 0x83, 0xff, 0x01, 0xfe, 0x00, 0x1e, 0x1e, 0x03, 0xc0,
    0x00, 0x0f, 0xfe, 0x0f, 0x80, 0x78, 0x0f, 0x87, 0xff, 0x01, 0xff, 0x80, 0x7f, 0x8f, 0x07, 0x80,
    0x00, 0x3f, 0xfe, 0x1f, 0x80, 0x7c, 0x1f, 0x87, 0xff, 0x01, 0xff, 0xc0, 0xff, 0xcf, 0x0f, 0x00,
    0x00, 0x7f, 0x86, 0x1f, 0x80, 0xfc, 0x1f, 0x87, 0xff, 0x01, 0xff, 0xe1, 0xff, 0xe7, 0x8f, 0x00,
    0x00, 0xfc, 0x00, 0x3f, 0xc0, 0xfc, 0x3f, 0x87, 0x80, 0x03, 0xc3, 0xe3, 0xe1, 0xf7, 0x9e, 0x00,
    0x01, 0xf0, 0x00, 0x3f, 0xc0, 0xfc, 0x3f, 0x87, 0x00, 0x03, 0xc1, 0xe7, 0xc0, 0xf3, 0xbc, 0x00,
    0x01, 0xe0, 0x00, 0x7b, 0xc1, 0xfc, 0x7f, 0x87, 0x00, 0x03, 0xc1, 0xe7, 0x80, 0x73, 0xfc, 0x00,
    0x03, 0xc0, 0x00, 0x7b, 0xc1, 0xfc, 0x7f, 0x8f, 0x00, 0x03, 0xc3, 0xc7, 0x80, 0x73, 0xf8, 0x00,
    0x03, 0xc0, 0x00, 0xf3, 0xc1, 0xfe, 0x77, 0x8f, 0xfc, 0x03, 0xff, 0xcf, 0x00, 0x71, 0xf8, 0x00,
    0x03, 0xc0, 0x00, 0xf1, 0xc3, 0xde, 0xe7, 0x8f, 0xfc, 0x03, 0xff, 0x8f, 0x00, 0x71, 0xf0, 0x00,
    0x03, 0x83, 0xf8, 0xff, 0xe3, 0xdf, 0xe7, 0x8f, 0xfc, 0x07, 0xff, 0xcf, 0x00, 0x70, 0xe0, 0x00,
    0x03, 0x83, 0xf9, 0xff, 0xe7, 0x9f, 0xe7, 0x8f, 0xfc, 0x07, 0xff, 0xcf, 0x00, 0xf1, 0xe0, 0x00,
    0x03, 0xc3, 0xf9, 0xff, 0xe7, 0x8f, 0xc7, 0x8e, 0x00, 0x07, 0x83, 0xef, 0x00, 0xf1, 0xe0, 0x00,
    0x03, 0xc0, 0x7b, 0xc1, 0xe7, 0x0f, 0xc3, 0xce, 0x00, 0x07, 0x81, 0xe7, 0x00, 0xf1, 0xe0, 0x00,
    0x03, 0xe0, 0x7b, 0xc1, 0xef, 0x0f, 0x83, 0xde, 0x00, 0x07, 0x01, 0xe7, 0x81, 0xe1, 0xc0, 0x00,
    0x01, 0xf0, 0x7b, 0x80, 0xef, 0x0f, 0x83, 0xde, 0x00, 0x07, 0x03, 0xc7, 0x83, 0xe1, 0xc0, 0x00,
    0x00, 0xff, 0xff, 0x80, 0xff, 0x07, 0x83, 0xdf, 0xfc, 0x0f, 0xff, 0xc3, 0xff, 0xc1, 0xc0, 0x00,
    0x00, 0x7f, 0xff, 0x00, 0xfe, 0x07, 0x03, 0xdf, 0xf8, 0x0f, 0xff, 0x81, 0xff, 0x83, 0xc0, 0x00,
    0x00, 0x3f, 0xef, 0x00, 0xfe, 0x07, 0x03, 0xdf, 0xf8, 0x0f, 0xff, 0x00, 0xff, 0x03, 0xc0, 0x00,
    0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x0f, 0xf8, 0x00, 0x3c, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

static const unsigned char PROGMEM logo_junia[] =
    { // logo junia
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0x80, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xc0, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xe0, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xf0, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xf0, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xf8, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xfc, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xfc, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xfe, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xfe, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xff, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xff, 0x80, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xff, 0x80, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xff, 0xc0, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xff, 0xc0, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xff, 0xe0, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xff, 0xe0, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xff, 0xf0, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xff, 0xf8, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xff, 0xf8, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xff, 0xfc, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xff, 0xfc, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xfb, 0xfe, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xf9, 0xff, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xf9, 0xff, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xf8, 0xff, 0x87, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xf8, 0xff, 0x87, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xf8, 0x7f, 0xc7, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xf8, 0x3f, 0xc7, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xf8, 0x3f, 0xe7, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xf8, 0x1f, 0xf7, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xf8, 0x1f, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xf8, 0x0f, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xf8, 0x0f, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xf8, 0x07, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xf8, 0x03, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xf8, 0x03, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfe, 0x00, 0x07, 0xf8, 0x01, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfe, 0x00, 0x07, 0xf8, 0x01, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfe, 0x00, 0x07, 0xf8, 0x00, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xfe, 0x00, 0x0f, 0xf0, 0x00, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0x00, 0x0f, 0xf0, 0x00, 0x7f, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x1f, 0xf0, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x80, 0x3f, 0xf0, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xe0, 0x7f, 0xe0, 0x00, 0x1f, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xe0, 0x00, 0x1f, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xc0, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xc0, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0x80, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xfe, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xfc, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const int pinBoutons[nombreBoutons] = {2, 3, 4, 5};
// const int pinIRLeds[nombreIRLeds] = {8, 9, 10, 11}; inutile dcp
const int pinIRCapteurs[nombrePrise] = {6, 7, 8, 9}; // autant de capteurs que de leds mdr logique
const int pinLedVerte = 6;
const int pinLedRouge = 7;

const int seuil = 100; // seuil à partir duquel une carte est détectée
bool BoutonPresse = false;

int caractereAEnvoyer = 1; // le numéro de la réponse

String questionnaireReference = "JPO-Fev-2022"; // à envoyer quand on connecte l'arduino
int numeroCarte = 0;

const char *listeQuestion[] = {"", "Que pensez vous de machin-chose", "qu'avez vous pense de cette interaction?", "etes vous satisfait de..."};

void setup()
{
    for (int i = 0; i < nombrePrise; i++)
    {
        pinMode(pinBoutons[i], INPUT);
        pinMode(pinIRCapteurs[i], INPUT);
    }
    pinMode(pinLedVerte, OUTPUT);
    pinMode(pinLedRouge, OUTPUT);

    Serial.begin(115200);
    delay(250);
    display.begin(i2c_Address, true);
    Serial.println(questionnaireReference);

    // splash screen avec logo junia
    display.clearDisplay();
    // display.drawBitmap(0, 0, logo_junia, SCREEN_WIDTH, SCREEN_HEIGHT, 1);
    for (int i = 0; i < 15; i++)
    {
        delay(HTZ);
        display.clearDisplay();
        display.display();
        delay(HTZ);
        display.drawBitmap(0, 0, logo_GB, SCREEN_WIDTH, SCREEN_HEIGHT, 1);
        display.display();
    }
    display.display();

    for (int i = 0; i < 128; i += 3)
    {
        display.clearDisplay();

        display.drawBitmap(posAX + i, 0, logo_GB, SCREEN_WIDTH, SCREEN_HEIGHT, 1);
        display.display();
    }
    delay(500);
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(SH110X_WHITE);
    display.setCursor(63, 32);
    display.write("JUNIA");
    display.display();
    delay(1000);
}

void loop()
{
    // le logo game boy en attendant que l'on rentre une carte
    display.clearDisplay();
    display.drawBitmap(0, 0, logo_GB, SCREEN_WIDTH, SCREEN_HEIGHT, 1);
    display.display();

    display.setTextSize(1);
    display.setTextColor(SH110X_WHITE);
    display.setCursor(SCREEN_WIDTH / 16, 0);
    display.write("Entrez une carte");
    display.display();

    while (numeroCarte == 0)
    {
        /* détection  de la carte entrée */
        numeroCarte = 0;
        for (int i = 0; i < nombrePrise; i++)
        { /* on calcule la somme binaire des trous en la convertissant en décimal */

            int value = digitalRead(pinIRCapteurs[i]);
            numeroCarte += (value == 1) ? pow(2, i) : 0;
            /* la ligne dessus équivaut à ca enft
            if (value == 1)
            {
                numeroCarte += pow(2,i);
            } else{
                numeroCarte += 0;
            } */
        }
        delay(1000);
    }

    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(SH110X_WHITE);
    display.setCursor(0, 0);
    display.write("Question n");
    display.write((char)numeroCarte + 48);
    display.write(" choisie. \n");
    display.write("\n");
    display.write(listeQuestion[numeroCarte]);
    display.display();

    /* détection du bouton cliqué */
    bool BoutonPresse = false;
    while (BoutonPresse == false)
    { // tant que 1 bouton n'est pas pressé on ne sort pas de cette boucle
        for (int i = 0; i < nombreBoutons; i++)
        {
            int valeurBouton = digitalRead(pinBoutons[i]);
            if (valeurBouton == 1)
            {
                caractereAEnvoyer = i;
                BoutonPresse = true; // un bouton a été pressé, on sort de la boucle
            }
        }
    }

    /* envoie des données à l'ordinateur
    Le big brain move:
    on additionne '@' ( caractère ascii n°64) au numero de la question convertit en décimal,
    Ainsi si c'est la question B, ca va faire 64 + 2 = 66 égale au caractère ascii 'B'
    */
    Serial.print((char)('@' + numeroCarte));
    Serial.println(caractereAEnvoyer + 1); // +1 parce que l'index commence à 0

    display.clearDisplay();
    display.setCursor(0, 0);
    display.setTextSize(0.5);
    display.write("information envoyee a l'ordinateur \n");
    display.write("Veuillez retirer la cartouche...")
        /* on attend que la carte soit sortit de son boîtier (même code que pour détecter que la carte est entrée, simplement une condition de sortie différente)*/
        while (numeroCarte != 0)
    {
        numeroCarte = 0;
        for (int i = 0; i < nombrePrise; i++)
        {

            int value = digitalRead(pinIRCapteurs[i]);
            numeroCarte += (value == 1) ? pow(2, i) : 0;
        }
    }

    numeroCarte = 0; // ne pas oublier que
}
